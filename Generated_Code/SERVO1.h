/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : SERVO1.h
**     Project     : ProcessorExpert
**     Processor   : MC56F84786VLK
**     Component   : PWM
**     Version     : Component 02.240, Driver 01.00, CPU db: 3.50.001
**     Compiler    : CodeWarrior DSP C Compiler
**     Date/Time   : 2015-01-30, 18:37, # CodeGen: 149
**     Abstract    :
**         This component implements a pulse-width modulation generator
**         that generates signal with variable duty and fixed cycle. 
**     Settings    :
**         Used output pin             : 
**             ----------------------------------------------------
**                Number (on package)  |    Name
**             ----------------------------------------------------
**                       64            |  GPIOG1/PWMB_1A/XB_OUT7
**             ----------------------------------------------------
**
**         Timer name                  : PWMB_SM1_Timer [16-bit]
**         Counter                     : PWMB_SM1CNT [E730]
**         Mode register               : PWMB_SM1CTRL [E733]
**         Run register                : PWMB_SM1CTRL [E733]
**         Prescaler                   : PWMB_SM1CTRL [E733]
**         Compare register            : PWMB_SM1VAL2 [E739]
**         Flip-flop register          : PWMB_SM1VAL3 [E73B]
**
**         User handling procedure     : not specified
**
**         Port name                   : GPIOG_Low
**         Bit number (in port)        : 1
**         Bit mask of the port        : 0002
**         Port data register          : GPIOG_DR  [E261]
**         Port control register       : GPIOG_DDR [E262]
**         Port function register      : GPIOG_PER [E263]
**
**         Initialization:
**              Output level           : high
**              Timer                  : Enabled
**              Event                  : Enabled
**         High speed mode
**             Prescaler               : divide-by-32
**             Clock                   : 3125000 Hz
**           Initial value of            period     pulse width
**             Xtal ticks              : 167772     12001
**             microseconds            : 20972      1500
**             milliseconds            : 21         2
**             seconds (real)          : 0.02097152 0.00150016
**
**     Contents    :
**         SetDutyUS - byte SERVO1_SetDutyUS(word Time);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file SERVO1.h
** @version 01.00
** @brief
**         This component implements a pulse-width modulation generator
**         that generates signal with variable duty and fixed cycle. 
*/         
/*!
**  @addtogroup SERVO1_module SERVO1 module documentation
**  @{
*/         

#ifndef __SERVO1
#define __SERVO1

/* MODULE SERVO1. */

#include "Cpu.h"

#define SERVO1_PERIOD_VALUE 0x00010000UL /* Initial period value in ticks of the timer. It is available only if the bean is enabled in high speed mode. */
#define SERVO1_PERIOD_VALUE_HIGH 0x00010000UL /* Period value in ticks of the timer in high speed mode. It is available only if the bean is enabled in high speed mode. */

byte SERVO1_SetDutyUS(word Time);
/*
** ===================================================================
**     Method      :  SERVO1_SetDutyUS (component PWM)
**     Description :
**         This method sets the new duty value of the output signal.
**         The duty is expressed in microseconds as a 16-bit
**         unsigned integer number.
**     Parameters  :
**         NAME            - DESCRIPTION
**         Time            - Duty to set [in microseconds]
**                      (0 to 20972 us in high speed mode)
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_SPEED - This device does not work in
**                           the active speed mode
**                           ERR_MATH - Overflow during evaluation
**                           ERR_RANGE - Parameter out of range
** ===================================================================
*/

void SERVO1_Init(void);
/*
** ===================================================================
**     Method      :  SERVO1_Init (component PWM)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/


/* END SERVO1. */

#endif /* ifndef __SERVO1 */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
